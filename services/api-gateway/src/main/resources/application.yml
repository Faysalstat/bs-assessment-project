
server.port: 8000
#Resiliencej configurations
resilience4j:
  circuitbreaker:
    config:
      default:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
    instances:
      productServiceBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED



#spring configs
spring:
  main:
    web-application-type: reactive
  application:
    name: api-gateway
  cloud:
    gateway:
      default-filters:
      - name: GlobalFilter
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:4200"
            allowedMethods:
            - POST
            - GET
            - OPTIONS
            allowedHeaders:
            - "Origin"
            - "Content-Type"
            - "Accept"
            - "Authorization"
            - "Referer"
      routes:
      - id: product-service
        uri: lb://product-service
        predicates:
        - Path=/product/**
        filters:
        - name: CircuitBreaker
          args:
             name: product-service
             fallbackUri: forward:/productservice/fallback
      - id: order-service
        uri: lb://order-service  # Load-balanced route to Service Two
        predicates:
        - Path=/orders/**
        filters:
        - name: CircuitBreaker
          args:
             name: order-service
             fallbackUri: forward:/orderservice/fallback
      - id: user-service
        uri: lb://user-service  # Load-balanced route to Service Two
        predicates:
        - Path=/user/**
        filters:
        - name: CircuitBreaker
          args:
             name: user-service
             fallbackUri: forward:/userservice/fallback