version: '3.8'

services:
    zookeeper:
            image: confluentinc/cp-zookeeper:latest
            hostname: zookeeper
            container_name: zookeeper
            environment:
              ZOOKEEPER_CLIENT_PORT: 2181
              ZOOKEEPER_TICK_TIME: 2000
            ports:
              - 22181:2181
            networks:
              - backend-network 
        
    kafka1:
        image: confluentinc/cp-kafka:latest
        hostname: kafka1
        container_name: kafka1
        depends_on:
          - zookeeper
        ports:
          - "9092:9092"
          - "29092:29092"
        networks:
          - backend-network 
        environment:
          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
          KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    mysql:
        image: mysql:5.7
        hostname: mysql
        container_name: mysql
        restart: always
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin
        ports:
          - "3306:3306"
        volumes:
          - mysql_data:/var/lib/mysql
        networks:
          - backend-network 
    redis:
        image: redis:latest
        hostname: redis
        container_name: redis
        ports:
          - "6379:6379"
        networks:
          - backend-network
    redis-insight:
        image: redislabs/redisinsight:latest
        container_name: my-redis-insight
        ports:
          - "8001:8001"
        depends_on:
          - redis
        networks:
          - backend-network
    keycloak:
        image: jboss/keycloak:latest
        container_name: keycloak
        ports:
          - "8055:8055"
        networks:
          - backend-network
        depends_on:
          - mysql
        environment:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
          DB_VENDOR: mysql
          DB_ADDR: mysql
          DB_DATABASE: keycloak
          DB_USER: root
          DB_PASSWORD: root
          DB_SCHEMA_UPDATE: update
          JDBC_PARAMS: "useSSL=false&rewriteBatchedStatements=true"
volumes:
  mysql_data:
    driver: local
networks:
  backend-network:
    driver: bridge